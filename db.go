// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mysql.mysql.proto

package mysql

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protoext "github.com/moneyforward/ca_backend/app/pkg/protoext"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ------------------------------------
// Messages
// ------------------------------------
type ColumnsPriv struct {
	// &#64;inject_tag: db:"Host"
	Host string `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty" db:"Host"`
	// &#64;inject_tag: db:"Db"
	Db string `protobuf:"bytes,2,opt,name=Db,proto3" json:"Db,omitempty" db:"Db"`
	// &#64;inject_tag: db:"User"
	User string `protobuf:"bytes,3,opt,name=User,proto3" json:"User,omitempty" db:"User"`
	// &#64;inject_tag: db:"Table_name"
	TableName string `protobuf:"bytes,4,opt,name=Table_name,json=TableName,proto3" json:"Table_name,omitempty" db:"Table_name"`
	// &#64;inject_tag: db:"Column_name"
	ColumnName string `protobuf:"bytes,5,opt,name=Column_name,json=ColumnName,proto3" json:"Column_name,omitempty" db:"Column_name"`
	// &#64;inject_tag: db:"Timestamp"
	Timestamp            *protoext.Timestamp `protobuf:"bytes,6,opt,name=Timestamp,proto3" json:"Timestamp,omitempty" db:"Timestamp"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ColumnsPriv) Reset()         { *m = ColumnsPriv{} }
func (m *ColumnsPriv) String() string { return proto.CompactTextString(m) }
func (*ColumnsPriv) ProtoMessage()    {}
func (*ColumnsPriv) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eac57bb6651495a, []int{0}
}

func (m *ColumnsPriv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnsPriv.Unmarshal(m, b)
}
func (m *ColumnsPriv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnsPriv.Marshal(b, m, deterministic)
}
func (m *ColumnsPriv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnsPriv.Merge(m, src)
}
func (m *ColumnsPriv) XXX_Size() int {
	return xxx_messageInfo_ColumnsPriv.Size(m)
}
func (m *ColumnsPriv) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnsPriv.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnsPriv proto.InternalMessageInfo

func (m *ColumnsPriv) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ColumnsPriv) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

func (m *ColumnsPriv) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ColumnsPriv) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *ColumnsPriv) GetColumnName() string {
	if m != nil {
		return m.ColumnName
	}
	return ""
}

func (m *ColumnsPriv) GetTimestamp() *protoext.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type Db struct {
	// &#64;inject_tag: db:"Host"
	Host string `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty" db:"Host"`
	// &#64;inject_tag: db:"Db"
	Db string `protobuf:"bytes,2,opt,name=Db,proto3" json:"Db,omitempty" db:"Db"`
	// &#64;inject_tag: db:"User"
	User                 string   `protobuf:"bytes,3,opt,name=User,proto3" json:"User,omitempty" db:"User"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Db) Reset()         { *m = Db{} }
func (m *Db) String() string { return proto.CompactTextString(m) }
func (*Db) ProtoMessage()    {}
func (*Db) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eac57bb6651495a, []int{1}
}

func (m *Db) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Db.Unmarshal(m, b)
}
func (m *Db) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Db.Marshal(b, m, deterministic)
}
func (m *Db) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Db.Merge(m, src)
}
func (m *Db) XXX_Size() int {
	return xxx_messageInfo_Db.Size(m)
}
func (m *Db) XXX_DiscardUnknown() {
	xxx_messageInfo_Db.DiscardUnknown(m)
}

var xxx_messageInfo_Db proto.InternalMessageInfo

func (m *Db) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Db) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

func (m *Db) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type EngineCost struct {
	// &#64;inject_tag: db:"engine_name"
	EngineName string `protobuf:"bytes,1,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty" db:"engine_name"`
	// &#64;inject_tag: db:"device_type"
	DeviceType int32 `protobuf:"varint,2,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty" db:"device_type"`
	// &#64;inject_tag: db:"cost_name"
	CostName string `protobuf:"bytes,3,opt,name=cost_name,json=costName,proto3" json:"cost_name,omitempty" db:"cost_name"`
	// &#64;inject_tag: db:"cost_value"
	CostValue *protoext.NullFloat64 `protobuf:"bytes,4,opt,name=cost_value,json=costValue,proto3" json:"cost_value,omitempty" db:"cost_value"`
	// &#64;inject_tag: db:"last_update"
	LastUpdate *protoext.Timestamp `protobuf:"bytes,5,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty" db:"last_update"`
	// &#64;inject_tag: db:"comment"
	Comment              *protoext.NullString `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty" db:"comment"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EngineCost) Reset()         { *m = EngineCost{} }
func (m *EngineCost) String() string { return proto.CompactTextString(m) }
func (*EngineCost) ProtoMessage()    {}
func (*EngineCost) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eac57bb6651495a, []int{2}
}

func (m *EngineCost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineCost.Unmarshal(m, b)
}
func (m *EngineCost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineCost.Marshal(b, m, deterministic)
}
func (m *EngineCost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineCost.Merge(m, src)
}
func (m *EngineCost) XXX_Size() int {
	return xxx_messageInfo_EngineCost.Size(m)
}
func (m *EngineCost) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineCost.DiscardUnknown(m)
}

var xxx_messageInfo_EngineCost proto.InternalMessageInfo

func (m *EngineCost) GetEngineName() string {
	if m != nil {
		return m.EngineName
	}
	return ""
}

func (m *EngineCost) GetDeviceType() int32 {
	if m != nil {
		return m.DeviceType
	}
	return 0
}

func (m *EngineCost) GetCostName() string {
	if m != nil {
		return m.CostName
	}
	return ""
}

func (m *EngineCost) GetCostValue() *protoext.NullFloat64 {
	if m != nil {
		return m.CostValue
	}
	return nil
}

func (m *EngineCost) GetLastUpdate() *protoext.Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *EngineCost) GetComment() *protoext.NullString {
	if m != nil {
		return m.Comment
	}
	return nil
}

type Event struct {
	// &#64;inject_tag: db:"db"
	Db string `protobuf:"bytes,1,opt,name=db,proto3" json:"db,omitempty" db:"db"`
	// &#64;inject_tag: db:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" db:"name"`
	// &#64;inject_tag: db:"body"
	Body []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty" db:"body"`
	// &#64;inject_tag: db:"definer"
	Definer string `protobuf:"bytes,4,opt,name=definer,proto3" json:"definer,omitempty" db:"definer"`
	// &#64;inject_tag: db:"execute_at"
	ExecuteAt *protoext.Timestamp `protobuf:"bytes,5,opt,name=execute_at,json=executeAt,proto3" json:"execute_at,omitempty" db:"execute_at"`
	// &#64;inject_tag: db:"interval_value"
	IntervalValue *protoext.NullInt32 `protobuf:"bytes,6,opt,name=interval_value,json=intervalValue,proto3" json:"interval_value,omitempty" db:"interval_value"`
	// &#64;inject_tag: db:"created"
	Created *protoext.Timestamp `protobuf:"bytes,8,opt,name=created,proto3" json:"created,omitempty" db:"created"`
	// &#64;inject_tag: db:"modified"
	Modified *protoext.Timestamp `protobuf:"bytes,9,opt,name=modified,proto3" json:"modified,omitempty" db:"modified"`
	// &#64;inject_tag: db:"last_executed"
	LastExecuted *protoext.Timestamp `protobuf:"bytes,10,opt,name=last_executed,json=lastExecuted,proto3" json:"last_executed,omitempty" db:"last_executed"`
	// &#64;inject_tag: db:"starts"
	Starts *protoext.Timestamp `protobuf:"bytes,11,opt,name=starts,proto3" json:"starts,omitempty" db:"starts"`
	// &#64;inject_tag: db:"ends"
	Ends *protoext.Timestamp `protobuf:"bytes,12,opt,name=ends,proto3" json:"ends,omitempty" db:"ends"`
	// &#64;inject_tag: db:"comment"
	Comment string `protobuf:"bytes,16,opt,name=comment,proto3" json:"comment,omitempty" db:"comment"`
	// &#64;inject_tag: db:"originator"
	Originator uint32 `protobuf:"varint,17,opt,name=originator,proto3" json:"originator,omitempty" db:"originator"`
	// &#64;inject_tag: db:"time_zone"
	TimeZone string `protobuf:"bytes,18,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty" db:"time_zone"`
	// &#64;inject_tag: db:"character_set_client"
	CharacterSetClient *protoext.NullString `protobuf:"bytes,19,opt,name=character_set_client,json=characterSetClient,proto3" json:"character_set_client,omitempty" db:"character_set_client"`
	// &#64;inject_tag: db:"collation_connection"
	CollationConnection *protoext.NullString `protobuf:"bytes,20,opt,name=collation_connection,json=collationConnection,proto3" json:"collation_connection,omitempty" db:"collation_connection"`
	// &#64;inject_tag: db:"db_collation"
	DbCollation *protoext.NullString `protobuf:"bytes,21,opt,name=db_collation,json=dbCollation,proto3" json:"db_collation,omitempty" db:"db_collation"`
	// &#64;inject_tag: db:"body_utf8"
	BodyUtf8             []byte   `protobuf:"bytes,22,opt,name=body_utf8,json=bodyUtf8,proto3" json:"body_utf8,omitempty" db:"body_utf8"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eac57bb6651495a, []int{3}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Event) GetDefiner() string {
	if m != nil {
		return m.Definer
	}
	return ""
}

func (m *Event) GetExecuteAt() *protoext.Timestamp {
	if m != nil {
		return m.ExecuteAt
	}
	return nil
}

func (m *Event) GetIntervalValue() *protoext.NullInt32 {
	if m != nil {
		return m.IntervalValue
	}
	return nil
}

func (m *Event) GetCreated() *protoext.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Event) GetModified() *protoext.Timestamp {
	if m != nil {
		return m.Modified
	}
	return nil
}

func (m *Event) GetLastExecuted() *protoext.Timestamp {
	if m != nil {
		return m.LastExecuted
	}
	return nil
}

func (m *Event) GetStarts() *protoext.Timestamp {
	if m != nil {
		return m.Starts
	}
	return nil
}

func (m *Event) GetEnds() *protoext.Timestamp {
	if m != nil {
		return m.Ends
	}
	return nil
}

func (m *Event) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Event) GetOriginator() uint32 {
	if m != nil {
		return m.Originator
	}
	return 0
}

func (m *Event) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

func (m *Event) GetCharacterSetClient() *protoext.NullString {
	if m != nil {
		return m.CharacterSetClient
	}
	return nil
}

type Item struct {
    // @inject_tag: db:"id"
    Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" db:"id"`
    // @inject_tag: db:"type"
    Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" db:"type"`
    // @inject_tag: db:"fs"
    Fs int32 `protobuf:"varint,3,opt,name=fs,proto3" json:"fs,omitempty" db:"fs"`
    // @inject_tag: db:"account_group"
    AccountGroup int32 `protobuf:"varint,4,opt,name=account_group,json=accountGroup,proto3" json:"account_group,omitempty" db:"account_group"`
    // @inject_tag: db:"account_property"
    AccountProperty int32 `protobuf:"varint,5,opt,name=account_property,json=accountProperty,proto3" json:"account_property,omitempty" db:"account_property"`
    // @inject_tag: db:"office_id"
    OfficeId uint64 `protobuf:"varint,6,opt,name=office_id,json=officeId,proto3" json:"office_id,omitempty" db:"office_id"`
    // @inject_tag: db:"excise_id"
    ExciseId uint64 `protobuf:"varint,7,opt,name=excise_id,json=exciseId,proto3" json:"excise_id,omitempty" db:"excise_id"`
    // @inject_tag: db:"name"
    Name string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty" db:"name"`
    // @inject_tag: db:"yomigana"
    Yomigana *protoext.NullString `protobuf:"bytes,9,opt,name=yomigana,proto3" json:"yomigana,omitempty" db:"yomigana"`
    // @inject_tag: db:"romaji"
    Romaji *protoext.NullString `protobuf:"bytes,10,opt,name=romaji,proto3" json:"romaji,omitempty" db:"romaji"`
    // @inject_tag: db:"code"
    Code *protoext.NullString `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty" db:"code"`
    // @inject_tag: db:"side"
    Side int32 `protobuf:"varint,12,opt,name=side,proto3" json:"side,omitempty" db:"side"`
    // @inject_tag: db:"is_active"
    IsActive bool `protobuf:"varint,13,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" db:"is_active"`
    // @inject_tag: db:"disp_order"
    DispOrder uint64 `protobuf:"varint,14,opt,name=disp_order,json=dispOrder,proto3" json:"disp_order,omitempty" db:"disp_order"`
    // @inject_tag: db:"item_master_id"
    ItemMasterId *protoext.NullInt32 `protobuf:"bytes,15,opt,name=item_master_id,json=itemMasterId,proto3" json:"item_master_id,omitempty" db:"item_master_id"`
    // @inject_tag: db:"created_at"
    CreatedAt *protoext.Timestamp `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" db:"created_at"`
    // @inject_tag: db:"updated_at"
    UpdatedAt            *protoext.Timestamp `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" db:"updated_at"`
    XXX_NoUnkeyedLiteral struct{}            `json:"-"`
    XXX_unrecognized     []byte              `json:"-"`
    XXX_sizecache        int32               `json:"-"`
}
